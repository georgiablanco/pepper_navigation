<launch>

<include file="$(find pepper_navigation)/launch/move_base.launch">
<arg name="move_forward_only" value="false"/>
</include>
<node name="explorer" pkg="pepper_navigation" type="explorer.py" output="screen"/>

</launch>

<!--<launch>-->
<!--    &lt;!&ndash; Set to your sensor's range &ndash;&gt;-->
<!--    <arg name="sensor_range" default="1.0"/>-->

<!--    <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/>-->

<!--    <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen" >-->

<!--        <param name="frequency" type="double" value="2.0"/>-->
<!--        <param name="goal_aliasing" type="double" value="$(arg sensor_range)"/>-->

<!--        #All standard costmap_2d parameters as in move_base, other than BoundedExploreLayer-->
<!--        <rosparam ns="explore_costmap" subst_value="true">-->
<!--            #Sample parameters-->
<!--            footprint: [[0.1, 0.0], [0.0, 0.1], [0.0, -0.1], [-0.1, 0.0]]-->
<!--            robot_radius: 0.10-->

<!--            transform_tolerance: 0.5-->
<!--            update_frequency: 5.0-->
<!--            publish_frequency: 5.0-->

<!--            global_frame: map-->
<!--            robot_base_frame: base_link-->
<!--            resolution: 0.05-->

<!--            rolling_window: false-->
<!--            track_unknown_space: true-->

<!--            plugins:-->

<!--                - {name: explore_boundary, type: "frontier_exploration::BoundedExploreLayer"}-->
<!--                - {name: sensor,           type: "costmap_2d::ObstacleLayer"}-->
<!--                - {name: inflation,        type: "costmap_2d::InflationLayer"}-->

<!--            explore_boundary:-->
<!--                resize_to_boundary: true-->
<!--                frontier_travel_point: closest-->

<!--            sensor:-->
<!--                observation_sources: points-->
<!--                laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true, raytrace_range: $(arg sensor_range), obstacle_range: $(arg sensor_range)}-->

<!--            inflation:-->
<!--                inflation_radius: 0.15-->
<!--      </rosparam>-->
<!--    </node>-->
<!--</launch>-->


<!--<launch>-->

<!--  <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/>-->

<!--  <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen">-->

<!--    <param name="frequency" value="1.0"/>-->

<!--    &lt;!&ndash; Should be less than sensor range &ndash;&gt;-->
<!--    <param name="goal_aliasing" value="2.0"/>-->

<!--    <rosparam file="$(find pepper_navigation)/param/costmap_common_params.yaml" command="load" ns="explore_costmap" />-->
<!--    <rosparam file="$(find pepper_navigation)/param/costmap_exploration.yaml" command="load" ns="explore_costmap" />-->

<!--  </node>-->

<!--</launch>-->


<!--<launch>-->
<!--    <node pkg="fake_localization" type="fake_localization" name="fake_localization" output="screen" />-->


<!--    &lt;!&ndash;  &lt;!&ndash; Move base &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;  <include file="$(find pepper_navigation)/launch/includes/move_base.launch.xml">&ndash;&gt;-->
<!--&lt;!&ndash;	<param name="custom_param_file" value="$(find pepper_navigation)/param/custom_nav_param.yaml"/>&ndash;&gt;-->
<!--&lt;!&ndash;  </include>&ndash;&gt;-->

<!--&lt;!&ndash;  <node name="explorer" pkg="turtlebot_explorer" type="explorer_random_actions.py" output="screen"/>&ndash;&gt;-->
<!--</launch>-->
